// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Prompt {
  id          String   @id @default(uuid())
  promptId    String   @unique // Discord message ID
  guildId     String   // Discord server ID
  promptType  String   // "player_toi", "player_points", "team_goals", etc.
  promptText  String   // Full text shown to users
  metadata    Json     // Flexible data: player_name, threshold, teams, etc.
  gameDate    DateTime
  gameId      String?  // NHL API game ID
  createdAt   DateTime @default(now())
  createdBy   String   // Discord user ID
  lockedAt    DateTime?
  
  votes       Vote[]
  results     Result[]
  winners     Winner[]
  
  @@index([guildId]) // For quick guild lookups
}

model Vote {
  id          String   @id @default(uuid())
  promptId    String
  userId      String   // Discord user ID
  voteChoice  String   // "over", "under", "team_a", "team_b", etc.
  votedAt     DateTime @default(now())
  
  prompt      Prompt   @relation(fields: [promptId], references: [id])
  
  @@unique([promptId, userId]) // One vote per user per prompt
}

model Result {
  id          String   @id @default(uuid())
  promptId    String   @unique
  resultData  Json     // Actual values, winning team, etc.
  winningChoice String // matches vote_choice options
  processedAt DateTime @default(now())
  
  prompt      Prompt   @relation(fields: [promptId], references: [id])
}

model Winner {
  id          String   @id @default(uuid())
  promptId    String
  userId      String   // Discord user ID
  wonAt       DateTime @default(now())
  
  prompt      Prompt   @relation(fields: [promptId], references: [id])
  
  @@index([userId]) // For quick user winner lookups
}
